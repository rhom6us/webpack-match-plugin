{"version":3,"file":"WebpackMatchPlugin.js","sourceRoot":"","sources":["../src/WebpackMatchPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["import { Compiler } from \"webpack\"\r\n\r\nexport class WatchFilterPlugin {\r\n  constructor(private readonly filter: WatchFileSystemFilter, private readonly debug: any) {\r\n  }\r\n\r\n  apply(compiler: Compiler) {\r\n    compiler.hooks.afterEnvironment.tap(\"WatchFilterPlugin\", () => {\r\n      (compiler as any).watchFileSystem = new IgnoringWatchFileSystem((compiler as any).watchFileSystem, this.filter, this.debug)\r\n    })\r\n  }\r\n}\r\n\r\ninterface WatchFileSystem {\r\n  watch(files: Array<string>, dirs: Array<string>, missing: Array<string>, startTime: number, options: any, callback: WatchFileSystemCallback, callbackUndelayed: () => void): void\r\n}\r\n\r\n// include or not\r\nexport type WatchFileSystemFilter = (file: string) => boolean\r\n\r\nexport type WatchFileSystemCallback = (error: Error | null, filesModified?: Array<string>, dirsModified?: Array<string>, missingModified?: Array<string>, fileTimestamps?: { [key: string]: number }, dirTimestamps?: { [key: string]: number }) => void\r\n\r\nclass IgnoringWatchFileSystem {\r\n  constructor(private readonly wfs: WatchFileSystem, private readonly filter: WatchFileSystemFilter, private readonly debug: any) {\r\n  }\r\n\r\n  watch(files: Array<string>, dirs: Array<string>, missing: Array<string>, startTime: number, options: any, callback: WatchFileSystemCallback, callbackUndelayed: () => void) {\r\n    const includedFiles: Array<string> = []\r\n    const includedDirs: Array<string> = []\r\n    const excludedFiles: Array<string> = []\r\n    const excludedDirs: Array<string> = []\r\n    separate(this.filter, files, includedFiles, excludedFiles)\r\n    separate(this.filter, dirs, includedDirs, excludedDirs)\r\n\r\n    if (this.debug.enabled) {\r\n      this.debug(`files:${stringifyList(files)}\\ndirs:${stringifyList(dirs)}\\nmissing:${stringifyList(missing)}`)\r\n      this.debug(`includedFiles:${stringifyList(includedFiles)}\\nincludedDirs:${stringifyList(includedDirs)}\\nexcludedFiles:${stringifyList(excludedFiles)}\\nexcludedDirs:${stringifyList(excludedDirs)}`)\r\n    }\r\n\r\n    return this.wfs.watch(includedFiles, includedDirs, missing, startTime, options, (error, filesModified, dirsModified, missingModified, fileTimestamps, dirTimestamps) => {\r\n      if (error != null) {\r\n        callback(error)\r\n        return\r\n      }\r\n\r\n      for (const p of excludedFiles) {\r\n        fileTimestamps![p] = 1\r\n      }\r\n\r\n      for (const p of excludedDirs) {\r\n        dirTimestamps![p] = 1\r\n      }\r\n\r\n      callback(null, filesModified, dirsModified, missingModified, fileTimestamps, dirTimestamps)\r\n    }, callbackUndelayed)\r\n  }\r\n}\r\n\r\nfunction separate(filter: WatchFileSystemFilter, list: Array<string>, included: Array<string>, excluded: Array<string>) {\r\n  for (const file of list) {\r\n    (filter(file) ? included : excluded).push(file)\r\n  }\r\n}\r\n\r\nfunction stringifyList(list: Array<string>) {\r\n  return `\\n  ${list.map(it => it.startsWith(process.cwd()) ? it.substring(process.cwd().length + 1) : it).join(\",\\n  \")}`\r\n}"]}